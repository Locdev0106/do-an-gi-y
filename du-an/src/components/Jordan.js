import React, { useState } from "react";
import { useSelector } from "react-redux"; // Import useSelector
import ProductCard from "./ProductCard";
import "./ProductList.css";
import "./Jordan.css";

function Jordan({ searchQuery, addToCart, updateQuantity, removeFromCart }) {
  const [filterPrice, setFilterPrice] = useState([0, 10000000]); // Kho·∫£ng gi√°
  const [filterSize, setFilterSize] = useState([]); // Size l·ªçc

  // L·∫•y danh s√°ch s·∫£n ph·∫©m t·ª´ Redux Store
  const products = useSelector((state) => state.product.products || []); // ƒê·∫£m b·∫£o c√≥ gi√° tr·ªã m·∫∑c ƒë·ªãnh l√† m·∫£ng r·ªóng

  // Ki·ªÉm tra n·∫øu products c√≥ gi√° tr·ªã v√† l·ªçc c√°c s·∫£n ph·∫©m
  const filteredProducts = products.filter((product) => {
    const name = product.name ? product.name.toLowerCase() : ''; // Ki·ªÉm tra n·∫øu name kh√¥ng ph·∫£i undefined
    const brand = product.brand ? product.brand.toLowerCase() : ''; // Ki·ªÉm tra n·∫øu brand kh√¥ng ph·∫£i undefined
    
    const isMatchQuery = name.includes(searchQuery.toLowerCase()); // T√¨m ki·∫øm theo t√™n s·∫£n ph·∫©m
    const isWithinPriceRange = product.price >= filterPrice[0] && product.price <= filterPrice[1]; // L·ªçc theo gi√°
    const hasSelectedSize = filterSize.length === 0 || product.sizes.some(size => filterSize.includes(size)); // L·ªçc theo size
    const isJordanInName = name.includes("jordan");  // L·ªçc s·∫£n ph·∫©m c√≥ t√™n ch·ª©a "Jordan"
    const isJordanBrand = brand === "jordan";  // L·ªçc s·∫£n ph·∫©m c√≥ th∆∞∆°ng hi·ªáu "Jordan"
    
    // K·∫øt h·ª£p t·∫•t c·∫£ c√°c ƒëi·ªÅu ki·ªán l·ªçc
    return (
      isMatchQuery && 
      isWithinPriceRange && 
      hasSelectedSize && 
      (isJordanInName || isJordanBrand) // Hi·ªÉn th·ªã s·∫£n ph·∫©m n·∫øu t√™n ho·∫∑c brand l√† "Jordan"
    );
  });

  // C·∫≠p nh·∫≠t gi√° tr·ªã l·ªçc kho·∫£ng gi√° khi thay ƒë·ªïi
  const handlePriceChange = (e) => {
    const priceRange = e.target.value.split("-").map(Number);
    setFilterPrice(priceRange);
  };

  // C·∫≠p nh·∫≠t size l·ªçc khi ng∆∞·ªùi d√πng ch·ªçn ho·∫∑c b·ªè ch·ªçn size
  const handleSizeChange = (size) => {
    setFilterSize((prev) =>
      prev.includes(size) ? prev.filter((s) => s !== size) : [...prev, size]
    );
  };

  return (
    <div className="product-list-container">
      {/* Thanh l·ªçc s·∫£n ph·∫©m */}
      <div className="filters">
        <div className="filter-section">
          <label>Kho·∫£ng gi√°:</label>
          <select onChange={handlePriceChange}>
            <option value="0-10000000">T·∫•t c·∫£</option>
            <option value="0-2000000">D∆∞·ªõi 2 tri·ªáu</option>
            <option value="2000000-5000000">T·ª´ 2 - 5 tri·ªáu</option>
            <option value="5000000-10000000">Tr√™n 5 tri·ªáu</option>
          </select>
        </div>

        <div className="filter-section">
          <label>Size:</label>
          {[38, 39, 40, 41, 42, 43, 44].map((size) => (
            <label key={size} className="size-checkbox">
              <input
                type="checkbox"
                value={size}
                onChange={() => handleSizeChange(size)}
              />
              {size}
            </label>
          ))}
        </div>
      </div>

      {/* Danh s√°ch s·∫£n ph·∫©m */}
      <div className="product-list">
        {filteredProducts.length > 0 ? (
          filteredProducts.map((product) => (
            <ProductCard
              key={product.id}
              product={product}
              addToCart={addToCart}
              updateQuantity={updateQuantity}
              removeFromCart={removeFromCart}
            />
          ))
        ) : (
          <p>Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ph√π h·ª£p.</p>
        )}
      </div>

     
      <footer
        style={{
          backgroundColor: "#2C3E50", 
          color: "#fff", 
          padding: "40px 20px",
          fontFamily: "Arial, sans-serif",
        }}
      >
        <div
          style={{
            display: "flex",
            flexDirection: "column",
            gap: "20px",
            borderBottom: "1px solid #1ABC9C",
            paddingBottom: "20px",
          }}
        >
          <div style={{ display: "flex", justifyContent: "space-between", alignItems: "center" }}>
            <div style={{ display: "flex", alignItems: "center", gap: "10px" }}>
              <span role="img" aria-label="email">
                üìß
              </span>
              <span style={{ fontWeight: "bold" }}>ƒêƒÇNG K√ù NH·∫¨N PHI·∫æU GI·∫¢M GI√Å</span>
            </div>
            <div style={{ display: "flex", alignItems: "center", gap: "10px" }}>
              <input
                type="email"
                placeholder="ƒê·ªãa ch·ªâ mail c·ªßa b·∫°n"
                style={{
                  padding: "8px",
                  borderRadius: "5px",
                  border: "1px solid #1ABC9C",
                  width: "250px",
                  outline: "none",
                }}
              />
              <button
                style={{
                  padding: "10px 20px",
                  backgroundColor: "#1ABC9C",
                  color: "#fff",
                  border: "none",
                  borderRadius: "5px",
                  fontWeight: "bold",
                  cursor: "pointer",
                  transition: "background-color 0.3s ease",
                }}
                onMouseOver={(e) => (e.target.style.backgroundColor = "#148F77")}
                onMouseOut={(e) => (e.target.style.backgroundColor = "#1ABC9C")}
              >
                ƒêƒÇNG K√ù
              </button>
            </div>
            <div>
              <span style={{ color: "#1ABC9C", fontWeight: "bold" }}>
                Nh·∫≠n Ngay VOUCHER 100k cho 500 kh√°ch h√†ng ƒë·∫ßu ti√™n
              </span>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}

export default Jordan;
